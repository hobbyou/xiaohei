spring.jpa.show-sql=true
server.port=80
spring.application.name=microservice-booking-management
# hbm2ddl
spring.jpa.hibernate.ddl-auto=update

#datasource
spring.datasource.url = jdbc:mysql://localhost:3306/xiaohei?useUnicode=true&characterEncoding=UTF-8&autoReconnect=true
spring.datasource.username = root
spring.datasource.password = 1234
spring.datasource.driverClassName = com.mysql.jdbc.Driver
spring.datasource.driver-class-name=com.mysql.jdbc.Driver

#pool 
spring.datasource.initialSize=5  
spring.datasource.minIdle=5  
spring.datasource.maxActive=20  
spring.datasource.maxWait=60000  
spring.datasource.timeBetweenEvictionRunsMillis=60000  
spring.datasource.minEvictableIdleTimeMillis=300000  
spring.datasource.validationQuery=SELECT 1 FROM DUAL  
spring.datasource.testWhileIdle=true  
spring.datasource.testOnBorrow=false  
spring.datasource.testOnReturn=false  
spring.datasource.poolPreparedStatements=true  
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20  
spring.datasource.filters=stat,wall,log4j  
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000 

#thymeleaf
spring.thymeleaf.mode=HTML5
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.content-type=text/html
spring.thymeleaf.cache=false
#spring.mvc.view.prefix=/pages/
#spring.mvc.view.suffix=.jsp


#logging
logging.file=log.log
logging.level.com.xiaofangtech.sunt.controller = debug
logging.level.com.xiaofangtech.sunt.helper = warn

#static path
web.upload-path=D:/dev/upload/

#spring.mvc.static-path-pattern=/**
spring.resources.static-locations=classpath:/static/,file:${web.upload-path}


# MULTIPART (MultipartProperties) 
# Enable support of multi-part uploads. 
spring.http.multipart.enabled=true
 # Threshold after which files will be written to disk. Values can use the suffixed "MB" or "KB" to indicate a Megabyte or Kilobyte size.
spring.http.multipart.file-size-threshold=0
 # Max file size. Values can use the suffixed "MB" or "KB" to indicate a Megabyte or Kilobyte size.  
spring.http.multipart.max-file-size=100MB
 # Max request size. Values can use the suffixed "MB" or "KB" to indicate a Megabyte or Kilobyte size.
spring.http.multipart.max-request-size=100MB
 # Whether to resolve the multipart request lazily at the time of file or parameter access.  
spring.http.multipart.resolve-lazily=false

#spring.http.encoding.force=true
#spring.http.encoding.charset=UTF-8
#spring.http.encoding.enabled=true
#server.tomcat.uri-encoding=UTF-8